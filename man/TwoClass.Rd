% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.trainFunctions.TwoClass.R
\docType{class}
\name{TwoClass}
\alias{TwoClass}
\title{<<tittle>>}
\description{
TwoClass
}
\details{
<<details>
}
\seealso{
\code{\link{TrainFunction}}
}
\section{Super class}{
\code{\link[DDMCS:TrainFunction]{DDMCS::TrainFunction}} -> \code{TwoClass}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TwoClass$new()}}
\item \href{#method-create}{\code{TwoClass$create()}}
\item \href{#method-getTrFunction}{\code{TwoClass$getTrFunction()}}
\item \href{#method-setClassProbs}{\code{TwoClass$setClassProbs()}}
\item \href{#method-getMeasures}{\code{TwoClass$getMeasures()}}
\item \href{#method-getType}{\code{TwoClass$getType()}}
\item \href{#method-setSummaryFunction}{\code{TwoClass$setSummaryFunction()}}
\item \href{#method-clone}{\code{TwoClass$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="DDMCS" data-topic="TrainFunction" data-id="getAllowParallel">}\href{../../DDMCS/html/TrainFunction.html#method-getAllowParallel}{\code{DDMCS::TrainFunction$getAllowParallel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="DDMCS" data-topic="TrainFunction" data-id="getClassProbs">}\href{../../DDMCS/html/TrainFunction.html#method-getClassProbs}{\code{DDMCS::TrainFunction$getClassProbs()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="DDMCS" data-topic="TrainFunction" data-id="getNumberFolds">}\href{../../DDMCS/html/TrainFunction.html#method-getNumberFolds}{\code{DDMCS::TrainFunction$getNumberFolds()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="DDMCS" data-topic="TrainFunction" data-id="getResamplingMethod">}\href{../../DDMCS/html/TrainFunction.html#method-getResamplingMethod}{\code{DDMCS::TrainFunction$getResamplingMethod()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="DDMCS" data-topic="TrainFunction" data-id="getSavePredictions">}\href{../../DDMCS/html/TrainFunction.html#method-getSavePredictions}{\code{DDMCS::TrainFunction$getSavePredictions()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="DDMCS" data-topic="TrainFunction" data-id="getSeed">}\href{../../DDMCS/html/TrainFunction.html#method-getSeed}{\code{DDMCS::TrainFunction$getSeed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="DDMCS" data-topic="TrainFunction" data-id="getVerboseIter">}\href{../../DDMCS/html/TrainFunction.html#method-getVerboseIter}{\code{DDMCS::TrainFunction$getVerboseIter()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$new(
  method,
  number,
  savePredictions,
  classProbs,
  allowParallel,
  verboseIter,
  seed = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{<<description>>}

\item{\code{number}}{<<description>>}

\item{\code{savePredictions}}{<<description>>}

\item{\code{classProbs}}{<<description>>}

\item{\code{allowParallel}}{<<description>>}

\item{\code{verboseIter}}{<<description>>}

\item{\code{seed}}{<<description>>}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create"></a>}}
\subsection{Method \code{create()}}{
<<description>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$create(summaryFunction, search.method = "grid", class.probs = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{summaryFunction}}{<<description>>}

\item{\code{search.method}}{<<description>>}

\item{\code{class.probs}}{<<description>>}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
<<description>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getTrFunction"></a>}}
\subsection{Method \code{getTrFunction()}}{
<<description>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$getTrFunction()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<description>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setClassProbs"></a>}}
\subsection{Method \code{setClassProbs()}}{
<<description>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$setClassProbs(class.probs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{class.probs}}{<<description>>}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
<<description>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getMeasures"></a>}}
\subsection{Method \code{getMeasures()}}{
<<description>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$getMeasures()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<description>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getType"></a>}}
\subsection{Method \code{getType()}}{
<<description>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$getType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<description>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setSummaryFunction"></a>}}
\subsection{Method \code{setSummaryFunction()}}{
<<description>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$setSummaryFunction(summaryFunction)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{summaryFunction}}{<<description>>}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
<<description>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TwoClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
