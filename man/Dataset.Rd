% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.Dataset.R
\docType{class}
\name{Dataset}
\alias{Dataset}
\title{Simple Dataset handler}
\description{
Creates a valid simple dataset object.
}
\seealso{
\code{\link{HDDataset}}
}
\keyword{attribute}
\keyword{datagen}
\keyword{datasets}
\keyword{manip}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Dataset$new()}}
\item \href{#method-getColumnNames}{\code{Dataset$getColumnNames()}}
\item \href{#method-getDataset}{\code{Dataset$getDataset()}}
\item \href{#method-getClassName}{\code{Dataset$getClassName()}}
\item \href{#method-getClassIndex}{\code{Dataset$getClassIndex()}}
\item \href{#method-getClassValues}{\code{Dataset$getClassValues()}}
\item \href{#method-getPositiveClass}{\code{Dataset$getPositiveClass()}}
\item \href{#method-getNcol}{\code{Dataset$getNcol()}}
\item \href{#method-getNrow}{\code{Dataset$getNrow()}}
\item \href{#method-getClassSummary}{\code{Dataset$getClassSummary()}}
\item \href{#method-getRemovedColumns}{\code{Dataset$getRemovedColumns()}}
\item \href{#method-setPositiveClass}{\code{Dataset$setPositiveClass()}}
\item \href{#method-setClassIndex}{\code{Dataset$setClassIndex()}}
\item \href{#method-setClassName}{\code{Dataset$setClassName()}}
\item \href{#method-cleanData}{\code{Dataset$cleanData()}}
\item \href{#method-removeColumns}{\code{Dataset$removeColumns()}}
\item \href{#method-createPartitions}{\code{Dataset$createPartitions()}}
\item \href{#method-createSubset}{\code{Dataset$createSubset()}}
\item \href{#method-createTrain}{\code{Dataset$createTrain()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Creates the \code{\link{Dataset}} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$new(
  filepath,
  header = TRUE,
  sep = ",",
  skip = 0,
  target.class,
  positive.class,
  normalize.names = FALSE,
  string.as.factor = FALSE,
  ignore.columns = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filepath}}{filepath the name of the file which the data are to be read from.
Each row of the table appears as one line of the file.
If it does not contain an _absolute_ path, the file name is _relative_ to the current working directory, ‘getwd()’.}

\item{\code{header}}{a logical value indicating whether the file contains the names of the variables as its first line.
If missing, the value is determined from the file format: ‘header’ is set to ‘TRUE’ if and only if the
first row contains one fewer field than the number of columns.}

\item{\code{sep}}{the field separator character. Values on each line of the file are separated by this character.}

\item{\code{skip}}{defines the number of header lines should be skipped.}

\item{\code{target.class}}{<<description>>}

\item{\code{positive.class}}{<<description>>}

\item{\code{normalize.names}}{a logical value indicating whether the columns names should be automatically renamed
to ensure R compatibility.}

\item{\code{string.as.factor}}{a logical value indicating if character columns should be converted to factors (default = FALSE).}

\item{\code{ignore.columns}}{specify the columns from the input file that should be ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a \link{Dataset} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getColumnNames"></a>}}
\subsection{Method \code{getColumnNames()}}{
get the name of the columns comprising the dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getColumnNames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
a character vector with the name of each column.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDataset"></a>}}
\subsection{Method \code{getDataset()}}{
gets the full dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getDataset()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
a \link{data.frame} with all the loaded information.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getClassName"></a>}}
\subsection{Method \code{getClassName()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getClassName()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<return>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getClassIndex"></a>}}
\subsection{Method \code{getClassIndex()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getClassIndex()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<return>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getClassValues"></a>}}
\subsection{Method \code{getClassValues()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getClassValues()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<return>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getPositiveClass"></a>}}
\subsection{Method \code{getPositiveClass()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getPositiveClass()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<return>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getNcol"></a>}}
\subsection{Method \code{getNcol()}}{
obtains the number of columns present in the Dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getNcol()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an \link{integer} of length 1 or \link{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getNrow"></a>}}
\subsection{Method \code{getNrow()}}{
obtains the number of rows present in the Dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getNrow()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an \link{integer} of length 1 or \link{NULL}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getClassSummary"></a>}}
\subsection{Method \code{getClassSummary()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getClassSummary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
<<return>>
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getRemovedColumns"></a>}}
\subsection{Method \code{getRemovedColumns()}}{
get the columns removed or ignored.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$getRemovedColumns()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
a \link{list} containing the name of the removed columns.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setPositiveClass"></a>}}
\subsection{Method \code{setPositiveClass()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$setPositiveClass(positive.class)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{positive.class}}{<<description>>}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setClassIndex"></a>}}
\subsection{Method \code{setClassIndex()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$setClassIndex(class.index, positive.class)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{class.index}}{<<description>>}

\item{\code{positive.class}}{<<description>>}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setClassName"></a>}}
\subsection{Method \code{setClassName()}}{
<<description>>
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$setClassName(class.name, positive.class)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{class.name}}{<<description>>}

\item{\code{positive.class}}{<<description>>}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanData"></a>}}
\subsection{Method \code{cleanData()}}{
removes \link{data.frame} columns matchimg some criterion.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$cleanData(remove.funcs = NULL, remove.na = TRUE, remove.const = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{remove.funcs}}{a vector of functions use to define which columns must be removed.}

\item{\code{remove.na}}{a logical value indicating whether \link{NA} values should be removed.}

\item{\code{remove.const}}{a logical value used to indicate if constant values should be removed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-removeColumns"></a>}}
\subsection{Method \code{removeColumns()}}{
applies \code{cleanData} function over an specific set of columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$removeColumns(
  columns,
  remove.funcs = NULL,
  remove.na = FALSE,
  remove.const = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{set of columns (numeric or character) where removal operation should be applied.}

\item{\code{remove.funcs}}{a vector of functions use to define which columns must be removed.}

\item{\code{remove.na}}{a logical value indicating whether \code{\link{NA}} values should be removed.}

\item{\code{remove.const}}{a logical value used to indicate if constant values should be removed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createPartitions"></a>}}
\subsection{Method \code{createPartitions()}}{
creates a k-folds partition from the initial dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$createPartitions(
  num.folds = NULL,
  percent.folds = NULL,
  class.balance = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{num.folds}}{an integer for the number of folds (partitions)}

\item{\code{percent.folds}}{an integer vector with the percentaje of instances containing each fold.}

\item{\code{class.balance}}{a logical value indicating if class balance should be kept.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createSubset"></a>}}
\subsection{Method \code{createSubset()}}{
create a \link{Subset} for testing or classification purposes. A target class should be provided for
testing purposes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$createSubset(
  num.folds,
  column.id = NULL,
  opts = list(remove.na = TRUE, remove.const = FALSE)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{num.folds}}{an integer defining the number of folds that should we used to build the \link{Subset}.}

\item{\code{column.id}}{an integer or character indicating the column (number or name respectively) identifier. Default \link{NULL} value
is valid ignores defining a identification column.}

\item{\code{opts}}{a list with optional parameters. Valid arguments are remove.na (removes columns with \link{NA} values) and
remove.const (ignore columns with constant values).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{Subset}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createTrain"></a>}}
\subsection{Method \code{createTrain()}}{
creates a set for training purposes. A class should be defined to guarantee full-compatibility
with supervised models.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dataset$createTrain(
  num.folds = NULL,
  opts = list(remove.na = TRUE, remove.const = FALSE)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{num.folds}}{an integer defining the number of folds that should we used to build the \link{Subset}.}

\item{\code{opts}}{a list with optional parameters. Valid arguments are remove.na (removes columns with \link{NA} values) and
remove.const (ignore columns with constant values).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{Trainset}
}
}
}
